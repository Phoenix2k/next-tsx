name: Next.tsx workflow
on: [push]
jobs:
  build-and-export:
    name: Build and export
    runs-on: ubuntu-16.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v1
    - name: Install Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - name: Install dependencies
      run: npm ci
    - name: Run build script
      run: npm run build
    - name: Run export script
      run: npm run export
  check-for-errors:
    name: Check for errors
    runs-on: ubuntu-16.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v1
    - name: Install Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - name: Install dependencies
      run: npm ci
    - name: Lint files
      run: npm run lint
  code-formatting:
    name: Code formatting
    runs-on: ubuntu-16.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v1
    - name: Install Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - name: Install dependencies
      run: npm ci
    - name: Check code formatting
      run: npm run prettier:check
  end-to-end-tests:
    name: End to end tests
    runs-on: ubuntu-16.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1
      - name: Run Cypress
        uses: cypress-io/github-action@v1
        with:
          build: npm run build
          config-file: __tests__/cypress/cypress.json
          start: npm start
          wait-on: http://localhost:3000
        env:
          CI: true
          CYPRESS_CI: true
  unit-tests:
    name: Unit tests
    runs-on: ubuntu-16.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v1
    - name: Run Jest and generate coverage report
      uses: stefanoeb/jest-action@1.0.2
      with:
        jestArgs: --config '__tests__/jest/jest.config.js' --coverage
      env:
        CI: true
    - name: Upload coverage report to Codecov.io
      uses: codecov/codecov-action@v1
      with:
        fail_ci_if_error: true
        file: __tests__/coverage/coverage-final.json
        flags: unittests
        name: Codecov report
        token: ${{ secrets.CODECOV_TOKEN }}
